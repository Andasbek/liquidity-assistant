version: "3.9"

name: liquidity-assistant

x-common-env: &common-env
  TZ: Asia/Almaty
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"

x-backend-env: &backend-env
  <<: *common-env
  # LLM
  LLM_PROVIDER: ${LLM_PROVIDER:-ollama}
  LLM_MODEL: ${LLM_MODEL:-mistral:latest}
  OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://host.docker.internal:11434}
  OPENAI_BASE_URL: ${OPENAI_BASE_URL:-http://host.docker.internal:8001/v1}
  OPENAI_API_KEY: ${OPENAI_API_KEY:-}
  LLM_TIMEOUT: ${LLM_TIMEOUT:-60}
  # Scheduler
  SYNC_EVERY_MIN: ${SYNC_EVERY_MIN:-0}
  # FX
  FX_PAIRS: ${FX_PAIRS:-USD/KZT,EUR/KZT}

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: la-backend
    environment: *backend-env
    ports:
      - "8000:8000"
    volumes:
      - ../data/processed:/app/data/processed            # артефакты ETL/модели
      - ../backend/app/assets/fonts:/app/app/assets/fonts # DejaVu шрифты для PDF
      - ../data/sample:/app/data/sample:ro                # демо-CSV (опц.)
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: la-frontend
    environment:
      <<: *common-env
      # можно захардкодить, а можно прокинуть переменной окружения
      API_URL: ${API_URL:-http://backend:8000/api}
    ports:
      - "8501:8501"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8501/_stcore/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 15s
    restart: unless-stopped

  # Опционально: реверс-прокси. Открой 8080 → /  на фронт,  /api → на бэкенд
  nginx:
    image: nginx:1.27-alpine
    container_name: la-nginx
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
